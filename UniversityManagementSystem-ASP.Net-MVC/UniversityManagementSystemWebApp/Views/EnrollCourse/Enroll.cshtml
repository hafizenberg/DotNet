@using System.Collections.Generic
@using UniversityManagementSystemWebApp.Models
@model UniversityManagementSystemWebApp.Models.Enroll

@{

    ViewBag.Title = "Enroll";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
    List<Student> RegNoList = ViewBag.RegNoList;

}





@using (Html.BeginForm("Enroll", "EnrollCourse", FormMethod.Post, new { id = "studentenrollform", @class = "form-horizontal main-center" }))
{
    <div class="form-group">
        <h2>Enroll New Student</h2>
    </div>
    <hr/>
    
         if (ViewBag.Message != null)
        {
            <div>
                <label class="form-group input-group alert alert-info">@ViewBag.Message</label>
                <br />
            </div>

        }


    <div class="form-group">
        <label for="StudentId" class="cols-sm-2 control-label">Student</label>

        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-building-o" aria-hidden="true"></i></span>
            @Html.DropDownListFor(x => x.StudentId, new SelectList(RegNoList, "StudentId", "RegistrationNo"), "--SELECT--", new {@class = "form-control"})
        </div>
        <div class="input-group">
            @Html.ValidationMessageFor(x => x.StudentId, null, new { @class = "text-danger" })
        </div>
    </div>






    <div class="form-group">
        <label for="Name" class="cols-sm-2 control-label">Name</label>

        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-user" aria-hidden="true"></i></span>
            <input class="readonly form-control" type='text' name="Name" id="Name" readonly="readonly" />

        </div>

    </div>

    <div class="form-group">
        <label for="Email" class="cols-sm-2 control-label">Email</label>

        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-envelope" aria-hidden="true"></i></span>
            <input class="readonly form-control" type='text' name="Email" id="Email" readonly="readonly" />

        </div>

    </div>

    <div class="form-group">
        <label for="Department" class="cols-sm-2 control-label">Department</label>

        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-building-o" aria-hidden="true"></i></span>
            <input class="readonly form-control" type='text' name="Department" id="Department" readonly="readonly" />

        </div>

    </div>


    <div class="form-group">
        <label for="CourseId" class="cols-sm-2 control-label">Course</label>

        <div class="input-group">

            <span class="input-group-addon"><i class="fa fa-graduation-cap" aria-hidden="true"></i></span>
            @Html.DropDownListFor(x => x.CourseId, new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control" })
            <script>
                $("#CourseId").append('<option value=""> --Select-- </option>');
            </script>
        </div>
        <div class="input-group">
            @Html.ValidationMessageFor(x => x.CourseId, null, new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="Date" class="cols-sm-2 control-label">Date</label>
        @*  <input type='text' class="col-md-10" id='Date' name="Date"/>*@
        <div class="input-group">
            <span class="input-group-addon"><i class="fa fa-calendar" aria-hidden="true"></i></span>
            @Html.TextBoxFor(x => x.Date, new { @class = "form-control", placeholder = "Select Date" })

        </div>
        <div class="input-group">
            @Html.ValidationMessageFor(x => x.Date, null, new { @class = "text-danger" })
        </div>

        <script type="text/javascript">
            $(function () {
                $('#Date').datetimepicker({
                    format: 'DD/MM/YYYY'
                });
            });
        </script>


    </div>



    <div class="form-group control-label">
        <button class="btn btn-success input-group" type="submit">Enroll</button>
    </div>

}

<script type="text/javascript">


    $(document).ready(function () {



        //cascading dropdownlist
        $("#StudentId").change(function () {
            var studentId = $("#StudentId").val();
            // alert("show dept id " + studentId);
            var json = { studentId: studentId };

            //call for course dropdown
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetCourseByStudentId", "EnrollCourse")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    $("#CourseId").empty();
                    $.each(data, function (key, value) {

                        $("#CourseId").append('<option value=' + value.Value + '>' + value.Text + '</option>');
                    });
                }

            });


            //for all Student info name,email,dept
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAllInfoByStudentId", "EnrollCourse")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function (data) {
                    if (data != null) {
                        $('#Name').val(data.StudentName);
                        $('#Email').val(data.Email);
                        $('#Department').val(data.DeptCode);
                    } else {
                        alert("Something went wrong");
                    }
                }

            });



        });
    });



</script>
